@using Microsoft.AspNetCore.Identity
@using Faculty.Data
@inject SignInManager<IdentityUser> SignInManager
@inject RoleManager<IdentityRole> RoleManager

    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            string CurrentUserRole = "";
            foreach (var r in RoleManager.Roles)
            {
                if (User.IsInRole(r.Name))
                {
                    CurrentUserRole = r.Name;
                    break;
                }
            }

            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hi,<b> @User.Identity.Name!</b> Your role <b>@CurrentUserRole</b> </a>
                @*<a class="nav-link text-dark bg-light" asp-area="Identity"  title="Manage">Добрый день, <b>@User.Identity.Name</b> !</a>*@

            </li>
            <li class="nav-item">
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-dark bg-light" style="margin-left:10px">Logout</button>
                </form>
            </li>

            @*@if (User?.IsInRole(BuiltinRoles.Administrator) ?? false)
            {
                <li class="nav-item">
                    <a class="nav-link text-dark bg-light" style="margin-left:10px" asp-area="Identity" asp-page="/Account/Register">Регистрация</a>
                </li>
            }*@
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark bg-light" style="margin-left:10px" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        }
    </ul>
